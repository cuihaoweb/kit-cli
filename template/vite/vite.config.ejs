import { defineConfig } from 'vite';
<%_ if (env === 'node') { _%>
import { VitePluginNode } from 'vite-plugin-node';
<%_ } _%>
import path from 'path';
import {fileURLToPath} from 'url';
import {dirname, resolve} from 'path';
import {IS_SERVER, conditionBack} from './build/config';
<%_ if (frame === 'svelte') { _%>
import {svelte} from '@sveltejs/vite-plugin-svelte';
<%_ } _%>
<%_ if (['spa', 'ssr', 'component'].includes(mode)) { _%>
import purgecss from 'vite-plugin-purgecss-v2';
<%_ } _%>

const CWD_PATH = process.cwd();
const resolveApp = (...paths) => path.resolve(CWD_PATH, ...paths);

export default defineConfig({
    resolve: {
        alias: [
            {find: /^@\/(.*)$/, replacement: path.resolve(__dirname, './src/$1')}
        ]
    },
    build: {
    <%_ if (mode === 'lib') { _%>
        lib: {
            entry: resolveApp('./index.js'),
            formats: ['es'],
            name: 'kit-cli',
            fileName: '[name].js'
        },
    <%_ } _%>
    <%_ if (mode === 'ssr') { _%>
        ...conditionBack(IS_SERVER, {
            lib: {
                entry: 'src/entry-server.ts',
            }
        }),
        outDir: IS_SERVER ? 'dist/server' : 'dist/client',
    <%_ } _%>
    },
    plugins: [
    <%_ if (['spa', 'ssr', 'component'].includes(mode)) { _%>
        purgecss(),
    <%_ } _%>
    <%_ if (mode === 'server') { _%>
        ...VitePluginNode({
            appPath: resolveApp('./index.js'),
        }),
    <%_ } _%>
    <%_ if (frame === 'svelte') { _%>
        svelte()
    <%_ } _%>
    ]
});
